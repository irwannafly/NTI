#fujitsu2/27/19
#interpolation on R 3.5
#available packages : imputeTS, stinepack, zoo
install.packages("imputeTS")
library(imputeTS)
na. interpolation (x, option = "linear", ...)
x <- ts(c(2,3,4,5,6,NA,7,8))
na.interpolation(x)
na.interpolation (x, option = "splien")
na.interpolation (x, option = "stine")
x %>% na.interpolation()
x %>% na.interpolation(option = "spine")


#using approxfun() source ("http://astrostatistics.psu.edu/su07/R/html/stats/html/approxfun.html)
x <- 1: 10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(,) and approxfun(.)")
points(approx(x, y), col = 2, pch ="*")
points(approx(x,y, method = "constant"), col = 4, pch = "*")



f <- approxfun(x, y)
curve(f(x), 0, 10, col = "green")
points(x, y)
is.function(fc <- approxfun(x, y, method = "const")) # TRUE
curve(fc(x), 0, 10, col = "darkblue", add = TRUE)


x <- c(2,2:4,4,4,5,5,7,7,7)
y <- c(1:6, 5:4, 3:1)
approx(x,y, xout=x)$y # warning
(ay <- approx(x,y, xout=x, ties = "ordered")$y)
stopifnot(ay == c(2,2,3,6,6,6,4,4,1,1,1))
approx(x,y, xout=x, ties = min)$y
approx(x,y, xout=x, ties = max)$y


##using zoo library source : "http://math.furman.edu/~dcs/courses/math47/R/library/zoo/html/na.approx.html"
z <- zoo(c(2,NA,1,4,5,2), c(1,3,4,6,7,8))
## use underlying time scale for interpolation
na.approx(z) 
## use equidistant spacing
na.approx(z, 1:6)

na.approx(zoo(c(NA,9,3,2,3,2)))
